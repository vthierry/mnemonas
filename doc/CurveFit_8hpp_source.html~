<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.13"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>Mnemonas&#39;semiware: src/util/CurveFit.hpp Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="logo.png"/></td>
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">Mnemonas&#39;semiware
   </div>
   <div id="projectbrief">Implementation of a Mnemonas semiware</div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.13 -->
<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="dir_68267d1309a1af8e8297ef4c3efbcdba.html">src</a></li><li class="navelem"><a class="el" href="dir_b7878ad5ecbf2506f4125b9d34c97e45.html">util</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="headertitle">
<div class="title">CurveFit.hpp</div>  </div>
</div><!--header-->
<div class="contents">
<a href="CurveFit_8hpp.html">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="preprocessor">#ifndef CURVEFIT_HPP</span></div><div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;<span class="preprocessor">#define CURVEFIT_HPP</span></div><div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;</div><div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="numeric_8hpp.html">util/numeric.hpp</a>&quot;</span></div><div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="Histogram_8hpp.html">util/Histogram.hpp</a>&quot;</span></div><div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="s__string_8h.html">util/s_string.h</a>&quot;</span></div><div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;<span class="preprocessor">#include &lt;vector&gt;</span></div><div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;</div><div class="line"><a name="l00020"></a><span class="lineno"><a class="line" href="classCurveFit.html">   20</a></span>&#160;<span class="keyword">class </span><a class="code" href="classCurveFit.html">CurveFit</a>: <span class="keyword">public</span> <a class="code" href="classnumeric.html">numeric</a> {</div><div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;<span class="keyword">private</span>:</div><div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;  std::vector &lt; double &gt; values;</div><div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;  <span class="keyword">mutable</span> <span class="keywordtype">double</span> gamma, c1, l1, T0, T1, T2, C0, C1, L0, L1, cmin, cmax, bias, gain, decay, error;</div><div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;  <span class="keyword">mutable</span> <span class="keywordtype">bool</span> updated;</div><div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;  <span class="keywordtype">void</span> update() <span class="keyword">const</span>;</div><div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;<span class="keyword">public</span>:</div><div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;  <a class="code" href="classCurveFit.html#a415ddcc61dd0e42054fb083c671f0181">CurveFit</a>(<span class="keyword">const</span> <a class="code" href="classCurveFit.html">CurveFit</a> &amp;fit);</div><div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;</div><div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;  <a class="code" href="classCurveFit.html#a415ddcc61dd0e42054fb083c671f0181">CurveFit</a>(<span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> window = 10);</div><div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;  <span class="keywordtype">void</span> <a class="code" href="classCurveFit.html#ae8234b2972c152bb8e285a54fade7957">clear</a>();</div><div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;</div><div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;  <span class="keywordtype">void</span> <a class="code" href="classCurveFit.html#a72cab7178ce12239b61b74f3ac11cd0c">add</a>(<span class="keywordtype">double</span> c);</div><div class="line"><a name="l00043"></a><span class="lineno"><a class="line" href="classCurveFit.html#a0eb993490cc620e617842ee81f33126c">   43</a></span>&#160;  <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> <a class="code" href="classCurveFit.html#a0eb993490cc620e617842ee81f33126c">getCount</a>()<span class="keyword"> const</span></div><div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;<span class="keyword">  </span>{</div><div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;    <span class="keywordflow">return</span> values.size();</div><div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;  }</div><div class="line"><a name="l00048"></a><span class="lineno"><a class="line" href="classCurveFit.html#a530c6e49121cd8e65743efc0433ff37a">   48</a></span>&#160;  <span class="keywordtype">double</span> <a class="code" href="classCurveFit.html#a530c6e49121cd8e65743efc0433ff37a">getDecay</a>()<span class="keyword"> const</span></div><div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;<span class="keyword">  </span>{</div><div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;    update();</div><div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;    <span class="keywordflow">return</span> decay;</div><div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;  }</div><div class="line"><a name="l00054"></a><span class="lineno"><a class="line" href="classCurveFit.html#aa69906733a219d6cc954c96e14296907">   54</a></span>&#160;  <span class="keywordtype">double</span> <a class="code" href="classCurveFit.html#aa69906733a219d6cc954c96e14296907">getGain</a>()<span class="keyword"> const</span></div><div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;<span class="keyword">  </span>{</div><div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;    update();</div><div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;    <span class="keywordflow">return</span> gain;</div><div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;  }</div><div class="line"><a name="l00060"></a><span class="lineno"><a class="line" href="classCurveFit.html#ae62b9726522b1d6b37278b23a22e607e">   60</a></span>&#160;  <span class="keywordtype">double</span> <a class="code" href="classCurveFit.html#ae62b9726522b1d6b37278b23a22e607e">getBias</a>()<span class="keyword"> const</span></div><div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;<span class="keyword">  </span>{</div><div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;    update();</div><div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;    <span class="keywordflow">return</span> bias;</div><div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;  }</div><div class="line"><a name="l00066"></a><span class="lineno"><a class="line" href="classCurveFit.html#a30fba93b4dcb5a209be5458a95b5e502">   66</a></span>&#160;  <span class="keywordtype">double</span> <a class="code" href="classCurveFit.html#a30fba93b4dcb5a209be5458a95b5e502">getError</a>()<span class="keyword"> const</span></div><div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;<span class="keyword">  </span>{</div><div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;    update();</div><div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;    <span class="keywordflow">return</span> error;</div><div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;  }</div><div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;  std::string <a class="code" href="classCurveFit.html#a0ac8432ab3bd9c6eb2825e110f570dc8">asString</a>() <span class="keyword">const</span>;</div><div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;</div><div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;  <span class="keywordtype">void</span> <a class="code" href="classCurveFit.html#abb649a1e64c8eaa313f860085384ba68">show</a>(<a class="code" href="s__string_8h.html#a342f13820a6f9c4de28e5a0940976db7">String</a> file, <span class="keywordtype">bool</span> <a class="code" href="classCurveFit.html#abb649a1e64c8eaa313f860085384ba68">show</a> = <span class="keyword">false</span>) <span class="keyword">const</span>;</div><div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;  <span class="keyword">const</span> <a class="code" href="classHistogram.html">Histogram</a> <a class="code" href="classCurveFit.html#aa8affd919f9fd4ac801dcce1c246b5fd">getHistogram</a>() <span class="keyword">const</span>;</div><div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;};</div><div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;</div><div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;<span class="preprocessor">#endif</span></div><div class="ttc" id="Histogram_8hpp_html"><div class="ttname"><a href="Histogram_8hpp.html">Histogram.hpp</a></div></div>
<div class="ttc" id="classnumeric_html"><div class="ttname"><a href="classnumeric.html">numeric</a></div><div class="ttdoc">This is the root class of numeric utility classes and factories. </div><div class="ttdef"><b>Definition:</b> <a href="numeric_8hpp_source.html#l00005">numeric.hpp:5</a></div></div>
<div class="ttc" id="classCurveFit_html_aa8affd919f9fd4ac801dcce1c246b5fd"><div class="ttname"><a href="classCurveFit.html#aa8affd919f9fd4ac801dcce1c246b5fd">CurveFit::getHistogram</a></div><div class="ttdeci">const Histogram getHistogram() const</div><div class="ttdoc">Returns the value statistics. </div><div class="ttdef"><b>Definition:</b> <a href="CurveFit_8cpp_source.html#l00119">CurveFit.cpp:119</a></div></div>
<div class="ttc" id="s__string_8h_html_a342f13820a6f9c4de28e5a0940976db7"><div class="ttname"><a href="s__string_8h.html#a342f13820a6f9c4de28e5a0940976db7">String</a></div><div class="ttdeci">const std::string &amp; String</div><div class="ttdoc">Defines a string constant value. </div><div class="ttdef"><b>Definition:</b> <a href="s__string_8h_source.html#l00007">s_string.h:7</a></div></div>
<div class="ttc" id="classCurveFit_html_aa69906733a219d6cc954c96e14296907"><div class="ttname"><a href="classCurveFit.html#aa69906733a219d6cc954c96e14296907">CurveFit::getGain</a></div><div class="ttdeci">double getGain() const</div><div class="ttdoc">Gets the best model gain  or 0 NAN in undefined. </div><div class="ttdef"><b>Definition:</b> <a href="CurveFit_8hpp_source.html#l00054">CurveFit.hpp:54</a></div></div>
<div class="ttc" id="classCurveFit_html_a0ac8432ab3bd9c6eb2825e110f570dc8"><div class="ttname"><a href="classCurveFit.html#a0ac8432ab3bd9c6eb2825e110f570dc8">CurveFit::asString</a></div><div class="ttdeci">std::string asString() const</div><div class="ttdoc">Returns the parameters as a JSON string. </div><div class="ttdef"><b>Definition:</b> <a href="CurveFit_8cpp_source.html#l00099">CurveFit.cpp:99</a></div></div>
<div class="ttc" id="classCurveFit_html"><div class="ttname"><a href="classCurveFit.html">CurveFit</a></div><div class="ttdoc">Fits an on-the-fly model on a time series. </div><div class="ttdef"><b>Definition:</b> <a href="CurveFit_8hpp_source.html#l00020">CurveFit.hpp:20</a></div></div>
<div class="ttc" id="classCurveFit_html_a0eb993490cc620e617842ee81f33126c"><div class="ttname"><a href="classCurveFit.html#a0eb993490cc620e617842ee81f33126c">CurveFit::getCount</a></div><div class="ttdeci">unsigned int getCount() const</div><div class="ttdoc">Gets the number of samples. </div><div class="ttdef"><b>Definition:</b> <a href="CurveFit_8hpp_source.html#l00043">CurveFit.hpp:43</a></div></div>
<div class="ttc" id="classHistogram_html"><div class="ttname"><a href="classHistogram.html">Histogram</a></div><div class="ttdoc">Defines an 1D statistics on a set of scalar values. </div><div class="ttdef"><b>Definition:</b> <a href="Histogram_8hpp_source.html#l00012">Histogram.hpp:12</a></div></div>
<div class="ttc" id="classCurveFit_html_ae8234b2972c152bb8e285a54fade7957"><div class="ttname"><a href="classCurveFit.html#ae8234b2972c152bb8e285a54fade7957">CurveFit::clear</a></div><div class="ttdeci">void clear()</div><div class="ttdoc">Clears the estimation. </div><div class="ttdef"><b>Definition:</b> <a href="CurveFit_8cpp_source.html#l00018">CurveFit.cpp:18</a></div></div>
<div class="ttc" id="classCurveFit_html_a30fba93b4dcb5a209be5458a95b5e502"><div class="ttname"><a href="classCurveFit.html#a30fba93b4dcb5a209be5458a95b5e502">CurveFit::getError</a></div><div class="ttdeci">double getError() const</div><div class="ttdoc">Gets the best model average L1 error. </div><div class="ttdef"><b>Definition:</b> <a href="CurveFit_8hpp_source.html#l00066">CurveFit.hpp:66</a></div></div>
<div class="ttc" id="numeric_8hpp_html"><div class="ttname"><a href="numeric_8hpp.html">numeric.hpp</a></div></div>
<div class="ttc" id="classCurveFit_html_abb649a1e64c8eaa313f860085384ba68"><div class="ttname"><a href="classCurveFit.html#abb649a1e64c8eaa313f860085384ba68">CurveFit::show</a></div><div class="ttdeci">void show(String file, bool show=false) const</div><div class="ttdoc">Plots the observed and modeled curve in a file. </div><div class="ttdef"><b>Definition:</b> <a href="CurveFit_8cpp_source.html#l00103">CurveFit.cpp:103</a></div></div>
<div class="ttc" id="classCurveFit_html_a415ddcc61dd0e42054fb083c671f0181"><div class="ttname"><a href="classCurveFit.html#a415ddcc61dd0e42054fb083c671f0181">CurveFit::CurveFit</a></div><div class="ttdeci">CurveFit(unsigned int window=10)</div><div class="ttdoc">Constructs an exponential decay interpolator. </div><div class="ttdef"><b>Definition:</b> <a href="CurveFit_8cpp_source.html#l00014">CurveFit.cpp:14</a></div></div>
<div class="ttc" id="classCurveFit_html_ae62b9726522b1d6b37278b23a22e607e"><div class="ttname"><a href="classCurveFit.html#ae62b9726522b1d6b37278b23a22e607e">CurveFit::getBias</a></div><div class="ttdeci">double getBias() const</div><div class="ttdoc">Gets the best model bias . </div><div class="ttdef"><b>Definition:</b> <a href="CurveFit_8hpp_source.html#l00060">CurveFit.hpp:60</a></div></div>
<div class="ttc" id="classCurveFit_html_a530c6e49121cd8e65743efc0433ff37a"><div class="ttname"><a href="classCurveFit.html#a530c6e49121cd8e65743efc0433ff37a">CurveFit::getDecay</a></div><div class="ttdeci">double getDecay() const</div><div class="ttdoc">Gets the exponential decay  or NAN if undefined. </div><div class="ttdef"><b>Definition:</b> <a href="CurveFit_8hpp_source.html#l00048">CurveFit.hpp:48</a></div></div>
<div class="ttc" id="classCurveFit_html_a72cab7178ce12239b61b74f3ac11cd0c"><div class="ttname"><a href="classCurveFit.html#a72cab7178ce12239b61b74f3ac11cd0c">CurveFit::add</a></div><div class="ttdeci">void add(double c)</div><div class="ttdoc">Adds a value in sequence. </div><div class="ttdef"><b>Definition:</b> <a href="CurveFit_8cpp_source.html#l00024">CurveFit.cpp:24</a></div></div>
<div class="ttc" id="s__string_8h_html"><div class="ttname"><a href="s__string_8h.html">s_string.h</a></div></div>
</div><!-- fragment --></div><!-- contents -->
<hr/><div align='right'><tt>mnemosyne brainybot (version of 2018-01-30 at 20:31:53) </tt> </div><hr/>
