<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.13"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>Mnemonas&#39;semiware: ParameterOptimizer Class Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="logo.png"/></td>
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">Mnemonas&#39;semiware
   </div>
   <div id="projectbrief">Implementation of a Mnemonas semiware</div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.13 -->
</div><!-- top -->
<div class="header">
  <div class="summary">
<a href="#pub-methods">Public Member Functions</a> &#124;
<a href="classParameterOptimizer-members.html">List of all members</a>  </div>
  <div class="headertitle">
<div class="title">ParameterOptimizer Class Reference</div>  </div>
</div><!--header-->
<div class="contents">

<p>Defines a meta-parameter optimizer of a given parameter space.  
 <a href="classParameterOptimizer.html#details">More...</a></p>

<p><code>#include &lt;<a class="el" href="ParameterOptimizer_8hpp_source.html">ParameterOptimizer.hpp</a>&gt;</code></p>
<div class="dynheader">
Inheritance diagram for ParameterOptimizer:</div>
<div class="dyncontent">
 <div class="center">
  <img src="classParameterOptimizer.png" usemap="#ParameterOptimizer_map" alt=""/>
  <map id="ParameterOptimizer_map" name="ParameterOptimizer_map">
<area href="classnumeric.html" title="This is the root class of numeric utility classes and factories. " alt="numeric" shape="rect" coords="0,0,123,24"/>
</map>
 </div></div>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:a452861a706fb5f532b5572f1b42b24db"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classParameterOptimizer.html#a452861a706fb5f532b5572f1b42b24db">ParameterOptimizer</a> (<a class="el" href="s__string_8h.html#a342f13820a6f9c4de28e5a0940976db7">String</a> parameters, char timing='i', unsigned int window=10)</td></tr>
<tr class="memdesc:a452861a706fb5f532b5572f1b42b24db"><td class="mdescLeft">&#160;</td><td class="mdescRight">Constructs a meta-parameter optimizer for the given parameter space.  <a href="#a452861a706fb5f532b5572f1b42b24db">More...</a><br /></td></tr>
<tr class="separator:a452861a706fb5f532b5572f1b42b24db"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a225e6804bced5a5efa3a375c1a213976"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classParameterOptimizer.html#a225e6804bced5a5efa3a375c1a213976">clear</a> ()</td></tr>
<tr class="memdesc:a225e6804bced5a5efa3a375c1a213976"><td class="mdescLeft">&#160;</td><td class="mdescRight">Clears the estimation.  <a href="#a225e6804bced5a5efa3a375c1a213976">More...</a><br /></td></tr>
<tr class="separator:a225e6804bced5a5efa3a375c1a213976"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a615b3bb933cc268ddd544a25dc77792c"><td class="memItemLeft" align="right" valign="top">double&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classParameterOptimizer.html#a615b3bb933cc268ddd544a25dc77792c">add</a> (double c, const double *values=NULL)</td></tr>
<tr class="memdesc:a615b3bb933cc268ddd544a25dc77792c"><td class="mdescLeft">&#160;</td><td class="mdescRight">Adds an observed value.  <a href="#a615b3bb933cc268ddd544a25dc77792c">More...</a><br /></td></tr>
<tr class="separator:a615b3bb933cc268ddd544a25dc77792c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4994639a5d7a3b38a835dc2348628542"><td class="memItemLeft" align="right" valign="top">const double *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classParameterOptimizer.html#a4994639a5d7a3b38a835dc2348628542">get</a> () const</td></tr>
<tr class="memdesc:a4994639a5d7a3b38a835dc2348628542"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets the next meta-parameter value proposal.  <a href="#a4994639a5d7a3b38a835dc2348628542">More...</a><br /></td></tr>
<tr class="separator:a4994639a5d7a3b38a835dc2348628542"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa64301654d16dce59ba46a9ddb1be9d7"><td class="memItemLeft" align="right" valign="top">std::string&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classParameterOptimizer.html#aa64301654d16dce59ba46a9ddb1be9d7">asString</a> () const</td></tr>
<tr class="memdesc:aa64301654d16dce59ba46a9ddb1be9d7"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the parameters estimation as a JSON string.  <a href="#aa64301654d16dce59ba46a9ddb1be9d7">More...</a><br /></td></tr>
<tr class="separator:aa64301654d16dce59ba46a9ddb1be9d7"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock"><p>Defines a meta-parameter optimizer of a given parameter space. </p>
<h3>Problem position</h3>
<p>Given the mimization of a criterion <img class="formulaInl" alt="$c({\bf x})$" src="form_23.png"/> by a minimization algorithm with meta-parameters <img class="formulaInl" alt="${\bf p}$" src="form_24.png"/>, this mechanism attemps to observe the minimization process in order to make proposals about the next meta-parameters.</p>
<h3>Meta-parameter space specification</h3>
<p>The meta-parameter space is defined by a multi-dimensional list of sampled values, e.g., if there are one boolean parameter <code>mode</code> and one logarithmic numeric parameter <code>scale</code> we may write:</p><pre>
{
  'mode'  : ['true', 'false'],
  'scale' : [0.1, 0.2, 0.5, 1, 2, 5, 10]
}</pre><p>making explicit the potential values.</p><ul>
<li>This specification is input as a JSON string.</li>
<li>Non numeric values are converted to their index in the value list, e.g. <code>['true', 'undefined', 'false']</code> is converted to <code>[0, 1, 2]</code>.</li>
<li>The mechanism uses both the continuous and discretized nature of the meta-parameter set.</li>
</ul>
<p>### Using this mechanism This mechanism is typicaly used in a construct of the form:</p><pre>
<a class="el" href="classParameterOptimizer.html" title="Defines a meta-parameter optimizer of a given parameter space. ">ParameterOptimizer</a> parameter_optimizer(parameter_specification);
../..
do {
  double* meta_parameter_values = parameter_optimizer.get();
  optimize_once(meta_parameter_values[0], meta_parameter_values[1], ../..
  parameter_optimizer.add(obtained_criterion_value());
} while(no_convergence);</pre><h3>Mechanism implementation</h3>
<ul>
<li>The following meta-criterion, for a cost <img class="formulaInl" alt="$c(t)$" src="form_13.png"/> at time <img class="formulaInl" alt="$T(t)$" src="form_25.png"/>, is considered: <center> <img class="formulaInl" alt="$\delta_c(t) = \frac{c(t) - c(t-1)}{c(t-1)} \, \frac{1}{T(t) - T(t-1)}$" src="form_26.png"/></center> thus the relative cost decrease speed, which reduces to relative cost decrease if only the iteration index is taken into account.</li>
<li>Marginal Gaussian processes are considered to randomly choose the next parameter. </li>
</ul>

<p class="definition">Definition at line <a class="el" href="ParameterOptimizer_8hpp_source.html#l00040">40</a> of file <a class="el" href="ParameterOptimizer_8hpp_source.html">ParameterOptimizer.hpp</a>.</p>
</div><h2 class="groupheader">Constructor &amp; Destructor Documentation</h2>
<a id="a452861a706fb5f532b5572f1b42b24db"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a452861a706fb5f532b5572f1b42b24db">&#9670;&nbsp;</a></span>ParameterOptimizer()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">ParameterOptimizer::ParameterOptimizer </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="s__string_8h.html#a342f13820a6f9c4de28e5a0940976db7">String</a>&#160;</td>
          <td class="paramname"><em>parameters</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">char&#160;</td>
          <td class="paramname"><em>timing</em> = <code>'i'</code>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">unsigned int&#160;</td>
          <td class="paramname"><em>window</em> = <code>10</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Constructs a meta-parameter optimizer for the given parameter space. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">parameters</td><td>The parameter space specification, see above. </td></tr>
    <tr><td class="paramname">timing</td><td>Defines if : 'c' The cpu time, or 'r' The real time, or 'i' The iteration index is to be taken into account. </td></tr>
    <tr><td class="paramname">window</td><td>The criterion sampling window containing 90% of the least-square average. </td></tr>
  </table>
  </dd>
</dl>

<p class="definition">Definition at line <a class="el" href="ParameterOptimizer_8cpp_source.html#l00008">8</a> of file <a class="el" href="ParameterOptimizer_8cpp_source.html">ParameterOptimizer.cpp</a>.</p>

<p class="reference">References <a class="el" href="assume_8c_source.html#l00007">assume()</a>, <a class="el" href="ParameterOptimizer_8cpp_source.html#l00040">clear()</a>, <a class="el" href="Struct_8hpp_source.html#l00184">Struct::getCount()</a>, <a class="el" href="Struct_8hpp_source.html#l00179">Struct::getLength()</a>, <a class="el" href="Struct_8hpp_source.html#l00249">Struct::Iterator::next()</a>, <a class="el" href="Struct_8cpp_source.html#l00274">Struct::reset()</a>, and <a class="el" href="Struct_8cpp_source.html#l00111">Struct::toDouble()</a>.</p>

</div>
</div>
<h2 class="groupheader">Member Function Documentation</h2>
<a id="a225e6804bced5a5efa3a375c1a213976"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a225e6804bced5a5efa3a375c1a213976">&#9670;&nbsp;</a></span>clear()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void ParameterOptimizer::clear </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Clears the estimation. </p>

<p class="definition">Definition at line <a class="el" href="ParameterOptimizer_8cpp_source.html#l00040">40</a> of file <a class="el" href="ParameterOptimizer_8cpp_source.html">ParameterOptimizer.cpp</a>.</p>

<p class="reference">References <a class="el" href="now_8c_source.html#l00008">now()</a>.</p>

<p class="reference">Referenced by <a class="el" href="ParameterOptimizer_8cpp_source.html#l00008">ParameterOptimizer()</a>.</p>

</div>
</div>
<a id="a615b3bb933cc268ddd544a25dc77792c"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a615b3bb933cc268ddd544a25dc77792c">&#9670;&nbsp;</a></span>add()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">double ParameterOptimizer::add </td>
          <td>(</td>
          <td class="paramtype">double&#160;</td>
          <td class="paramname"><em>c</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const double *&#160;</td>
          <td class="paramname"><em>values</em> = <code>NULL</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Adds an observed value. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">c</td><td>The criterion observed value. </td></tr>
    <tr><td class="paramname">values</td><td>The related meta-parameter value, by default the last meta-parameter value proposal obtained by <a class="el" href="classParameterOptimizer.html#a4994639a5d7a3b38a835dc2348628542" title="Gets the next meta-parameter value proposal. ">get()</a>. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>The relative cost decrease <img class="formulaInl" alt="$\delta_c$" src="form_27.png"/>. </dd></dl>

<p class="definition">Definition at line <a class="el" href="ParameterOptimizer_8cpp_source.html#l00070">70</a> of file <a class="el" href="ParameterOptimizer_8cpp_source.html">ParameterOptimizer.cpp</a>.</p>

<p class="reference">References <a class="el" href="assume_8c_source.html#l00007">assume()</a>, and <a class="el" href="now_8c_source.html#l00008">now()</a>.</p>

</div>
</div>
<a id="a4994639a5d7a3b38a835dc2348628542"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a4994639a5d7a3b38a835dc2348628542">&#9670;&nbsp;</a></span>get()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">const double * ParameterOptimizer::get </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Gets the next meta-parameter value proposal. </p>

<p class="definition">Definition at line <a class="el" href="ParameterOptimizer_8cpp_source.html#l00102">102</a> of file <a class="el" href="ParameterOptimizer_8cpp_source.html">ParameterOptimizer.cpp</a>.</p>

</div>
</div>
<a id="aa64301654d16dce59ba46a9ddb1be9d7"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aa64301654d16dce59ba46a9ddb1be9d7">&#9670;&nbsp;</a></span>asString()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">std::string ParameterOptimizer::asString </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Returns the parameters estimation as a JSON string. </p>

<p class="definition">Definition at line <a class="el" href="ParameterOptimizer_8cpp_source.html#l00110">110</a> of file <a class="el" href="ParameterOptimizer_8cpp_source.html">ParameterOptimizer.cpp</a>.</p>

<p class="reference">References <a class="el" href="Struct_8cpp_source.html#l00472">Struct::asString()</a>, and <a class="el" href="s__printf_8c_source.html#l00008">s_printf()</a>.</p>

</div>
</div>
<hr/>The documentation for this class was generated from the following files:<ul>
<li>src/util/<a class="el" href="ParameterOptimizer_8hpp_source.html">ParameterOptimizer.hpp</a></li>
<li>src/util/<a class="el" href="ParameterOptimizer_8cpp_source.html">ParameterOptimizer.cpp</a></li>
</ul>
</div><!-- contents -->
<hr/><div align='right'><tt>mnemosyne brainybot (version of 2018-01-30 at 20:31:53) </tt> </div><hr/>
